{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gamepad.json", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/easings.ts", "../node_modules/kaboom/src/timer.ts", "../node_modules/kaboom/src/kaboom.ts", "../code/loaders/assetLoaders/assetLoader.js", "../code/scenes/englishMenuScene.js", "../code/scenes/chineseMenuScene.js", "../code/loaders/sceneLoaders/menuSceneLoader.js", "../code/scenes/mainGameScene.js", "../code/scenes/gameOverScene.js", "../code/loaders/sceneLoaders/gameSceneLoader.js", "../code/initializers/gameInitializer.js", "../code/gameData.js", "../code/main.js"],
  "sourcesContent": ["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T extends RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n", "export class IDList<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: IDList<(...args: Args) => void> = new IDList()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn o1 === o2\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n", "{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n\tKaboomCtx,\n\tCursor,\n\tKey,\n\tMouseButton,\n\tVirtualButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tpaused: false,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tvirtualButtonDown: [VirtualButton],\n\t\t\tvirtualButtonPress: [VirtualButton],\n\t\t\tvirtualButtonRelease: [VirtualButton],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: paused should still process input\n\t\t\t// TODO: allow background actions?\n\t\t\tif (state.paused || document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchScreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyDown\"]\n\n\tconst onKeyPress = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPress\"]\n\n\tconst onKeyPressRepeat = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPressRepeat\"]\n\n\tconst onKeyRelease = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyRelease\"]\n\n\tfunction onMouseDown(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMousePress(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mousePress\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseRelease(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX, t.clientY),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchMove\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchEnd\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchEnd\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchScreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t\tget paused() {\n\t\t\treturn state.paused\n\t\t},\n\t\tset paused(p: boolean) {\n\t\t\tstate.paused = p\n\t\t},\n\t}\n\n}\n", "// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n", "export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time\n\t\tthis.action = action\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false\n\t\tthis.time -= dt\n\t\tif (this.time <= 0) {\n\t\t\tthis.action()\n\t\t\tthis.finished = true\n\t\t\tthis.time = 0\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treset(time) {\n\t\tthis.time = time\n\t\tthis.finished = false\n\t}\n\n}\n", "const VERSION = \"3000.0.0-beta.6\"\n\nimport initApp from \"./app\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\n\nimport {\n\tIDList,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\tdeepEq,\n\tdataURLToArrayBuffer,\n\tEventController,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n} from \"./utils\"\n\nimport type {\n\tGfxShader,\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tTextureOpt,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tLoadSoundOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tVirtualButton,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n} from \"./types\"\n\nimport Timer from \"./timer\"\n\n// @ts-ignore\nimport beanSpriteSrc from \"./assets/bean.png\"\n// @ts-ignore\nimport burpSoundSrc from \"./assets/burp.mp3\"\n// @ts-ignore\nimport kaSpriteSrc from \"./assets/ka.png\"\n// @ts-ignore\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ntype EventList<M> = {\n\t[event in keyof M]?: (event: M[event]) => void\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"nearest\"\n\nconst LOG_MAX = 1\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\tconst cw = canvas.width\n\tconst ch = canvas.height\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheCtx = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tclass Texture {\n\n\t\tsrc: null | TexImageSource = null\n\t\tglTex: WebGLTexture\n\t\twidth: number\n\t\theight: number\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\n\t\t\tthis.glTex = gl.createTexture()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\n\t\t\tif (w && h) {\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, gl.RGBA,\n\t\t\t\t\tw,\n\t\t\t\t\th,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.width = w\n\t\t\tthis.height = h\n\n\t\t\tconst filter = (() => {\n\t\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\t\tcase \"linear\": return gl.LINEAR\n\t\t\t\t\tcase \"nearest\": return gl.NEAREST\n\t\t\t\t\tdefault: return gl.NEAREST\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tconst wrap = (() => {\n\t\t\t\tswitch (opt.wrap) {\n\t\t\t\t\tcase \"repeat\": return gl.REPEAT\n\t\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE\n\t\t\t\t\tdefault: return gl.CLAMP_TO_EDGE\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\t\tthis.unbind()\n\n\t\t}\n\n\t\tstatic fromImage(img: TexImageSource, opt: TextureOpt = {}): Texture {\n\t\t\tconst tex = new Texture(0, 0, opt)\n\t\t\ttex.bind()\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\ttex.width = img.width\n\t\t\ttex.height = img.height\n\t\t\ttex.unbind()\n\t\t\ttex.src = img\n\t\t\treturn tex\n\t\t}\n\n\t\tupdate(img: TexImageSource, x = 0, y = 0) {\n\t\t\tthis.bind()\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.glTex)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteTexture(this.glTex)\n\t\t}\n\n\t}\n\n\tclass TexPacker {\n\t\tprivate tex: Texture\n\t\tprivate canvas: HTMLCanvasElement\n\t\tprivate ctx: CanvasRenderingContext2D\n\t\tprivate x: number = 0\n\t\tprivate y: number = 0\n\t\tprivate curHeight: number = 0\n\t\tconstructor(w: number, h: number) {\n\t\t\tthis.canvas = document.createElement(\"canvas\")\n\t\t\tthis.canvas.width = w\n\t\t\tthis.canvas.height = h\n\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t}\n\t\tadd(img: TexImageSource): [Texture, Quad] {\n\t\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t\t}\n\t\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y += this.curHeight\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y = 0\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tconst pos = new Vec2(this.x, this.y)\n\t\t\tthis.x += img.width\n\t\t\tif (img.height > this.curHeight) {\n\t\t\t\tthis.curHeight = img.height\n\t\t\t}\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tthis.ctx.putImageData(img, pos.x, pos.y)\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img, pos.x, pos.y)\n\t\t\t}\n\t\t\tthis.tex.update(this.canvas)\n\t\t\treturn [this.tex, new Quad(\n\t\t\t\tpos.x / this.canvas.width,\n\t\t\t\tpos.y / this.canvas.height,\n\t\t\t\timg.width / this.canvas.width,\n\t\t\t\timg.height / this.canvas.height,\n\t\t\t)]\n\t\t}\n\t}\n\n\tclass FrameBuffer {\n\n\t\ttex: Texture\n\t\tglFrameBuffer: WebGLFramebuffer\n\t\tglRenderBuffer: WebGLRenderbuffer\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\t\t\tthis.tex = new Texture(w, h, opt)\n\t\t\tthis.glFrameBuffer = gl.createFramebuffer()\n\t\t\tthis.glRenderBuffer = gl.createRenderbuffer()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.tex.glTex,\n\t\t\t\t0,\n\t\t\t)\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.glRenderBuffer,\n\t\t\t)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glFrameBuffer)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.glRenderBuffer)\n\t\t\t// gl.viewport(0, 0, this.tex.width, this.tex.height)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteFramebuffer(this.glFrameBuffer)\n\t\t\tgl.deleteRenderbuffer(this.glRenderBuffer)\n\t\t}\n\n\t}\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.enable(gl.SCISSOR_TEST)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\t// we only use one vertex and index buffer that batches all draw calls\n\t\tconst vbuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, MAX_BATCHED_VERTS * 4, gl.DYNAMIC_DRAW)\n\n\t\tVERTEX_FORMAT.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, STRIDE * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n\t\tconst ibuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, MAX_BATCHED_INDICES * 4, gl.DYNAMIC_DRAW)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// keep track of how many draw calls we're doing this frame\n\t\t\tdrawCalls: 0,\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\n\t\t\t// local vertex / index buffer queue\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width,\n\t\t\theight: gopt.height,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: TexImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\t// TODO: handle when audio context is unavailable\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tclass Asset<D> {\n\t\tloaded: boolean = false\n\t\tdata: D | null = null\n\t\terror: Error | null = null\n\t\tprivate onLoadEvents: Event<[D]> = new Event()\n\t\tprivate onErrorEvents: Event<[Error]> = new Event()\n\t\tprivate onFinishEvents: Event<[]> = new Event()\n\t\tconstructor(loader: Promise<D>) {\n\t\t\tloader.then((data) => {\n\t\t\t\tthis.data = data\n\t\t\t\tthis.onLoadEvents.trigger(data)\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.error = err\n\t\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t\t} else {\n\t\t\t\t\tthrow err\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.onFinishEvents.trigger()\n\t\t\t\tthis.loaded = true\n\t\t\t})\n\t\t}\n\t\tstatic loaded<D>(data: D): Asset<D> {\n\t\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\t\tasset.data = data\n\t\t\tasset.loaded = true\n\t\t\treturn asset\n\t\t}\n\t\tonLoad(action: (data: D) => void) {\n\t\t\tif (this.loaded && this.data) {\n\t\t\t\taction(this.data)\n\t\t\t} else {\n\t\t\t\tthis.onLoadEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonError(action: (err: Error) => void) {\n\t\t\tif (this.loaded && this.error) {\n\t\t\t\taction(this.error)\n\t\t\t} else {\n\t\t\t\tthis.onErrorEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonFinish(action: () => void) {\n\t\t\tif (this.loaded) {\n\t\t\t\taction()\n\t\t\t} else {\n\t\t\t\tthis.onFinishEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tthen(action: (data: D) => void): Asset<D> {\n\t\t\treturn this.onLoad(action)\n\t\t}\n\t\tcatch(action: (err: Error) => void): Asset<D> {\n\t\t\treturn this.onError(action)\n\t\t}\n\t\tfinally(action: () => void): Asset<D> {\n\t\t\treturn this.onFinish(action)\n\t\t}\n\t}\n\n\tclass AssetBucket<D> {\n\t\tassets: Map<string, Asset<D>> = new Map()\n\t\tlastUID: number = 0\n\t\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t\t// if user don't provide a name we use a generated one\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = new Asset(loader)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = Asset.loaded(data)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\tget(handle: string): Asset<D> | void {\n\t\t\treturn this.assets.get(handle)\n\t\t}\n\t\tprogress(): number {\n\t\t\tif (this.assets.size === 0) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tlet loaded = 0\n\t\t\tthis.assets.forEach((asset) => {\n\t\t\t\tif (asset.loaded) {\n\t\t\t\t\tloaded++\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn loaded / this.assets.size\n\t\t}\n\t}\n\n\tconst assets = {\n\t\t// prefix for when loading from a url\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tvirtualButtonDown: [VirtualButton],\n\t\t\tvirtualButtonPress: [VirtualButton],\n\t\t\tvirtualButtonRelease: [VirtualButton],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\t// TODO: accept Asset<T>?\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\t// wrapper around fetch() that applies urlPrefix and basic error handling\n\tfunction fetchURL(path: string) {\n\t\tconst url = assets.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new Error(`Failed to fetch ${url}`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : assets.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\toutline: number\n\t\tfilter: TexFilter\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.outline = opt.outline ?? 0\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | ArrayBuffer,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed TexImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: TexImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tctx.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = ctx.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as TexImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tctx.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t\topts: LoadSoundOpt = {},\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vcode)\n\t\tgl.shaderSource(fragShader, fcode)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\n\t\tgc.push(() => gl.deleteProgram(prog))\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tgl.bindAttribLocation(prog, 0, \"a_pos\")\n\t\tgl.bindAttribLocation(prog, 1, \"a_uv\")\n\t\tgl.bindAttribLocation(prog, 2, \"a_color\")\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\n\t\t\tconst formatShaderError = (msg: string) => {\n\t\t\t\tconst FMT = /^ERROR:\\s0:(?<line>\\d+):\\s(?<msg>.+)/\n\t\t\t\tconst match = msg.match(FMT)\n\t\t\t\treturn {\n\t\t\t\t\tline: Number(match.groups.line),\n\t\t\t\t\t// seem to be a \\n\\0 at the end of error messages, causing unwanted line break\n\t\t\t\t\tmsg: match.groups.msg.replace(/\\n\\0$/, \"\"),\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tlet msg = \"\"\n\n\t\t\tif (vertError) {\n\t\t\t\tconst err = formatShaderError(vertError)\n\t\t\t\tmsg += `Vertex shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tif (fragError) {\n\t\t\t\tconst err = formatShaderError(fragError)\n\t\t\t\tmsg += `Fragment shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tthrow new Error(msg)\n\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(prog)\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null)\n\t\t\t},\n\n\t\t\tfree() {\n\t\t\t\tgl.deleteProgram(prog)\n\t\t\t},\n\n\t\t\t// TODO: support vec3 and vec4\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name]\n\t\t\t\t\tconst loc = gl.getUniformLocation(prog, name)\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t\t// TODO: opacity?\n\t\t\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > MAX_BATCHED_VERTS\n\t\t\t|| gfx.iqueue.length + indices.length > MAX_BATCHED_INDICES\n\t\t) {\n\t\t\tflush()\n\t\t}\n\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform)\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tfor (const i of indices) {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length)\n\t\t}\n\n\t\tgfx.curTex = tex\n\t\tgfx.curShader = shader\n\t\tgfx.curUniform = uniform\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue))\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue))\n\t\tgfx.curShader.bind()\n\t\tgfx.curShader.send(gfx.curUniform)\n\t\tgfx.curTex.bind()\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tgfx.curTex.unbind()\n\t\tgfx.curShader.unbind()\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\tgfx.vqueue.length = 0\n\t\tgfx.iqueue.length = 0\n\n\t\tgfx.drawCalls++\n\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.frameBuffer.unbind()\n\t\tdrawUnscaled(() => {\n\t\t\tdrawTexture({\n\t\t\t\tflipY: true,\n\t\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\t\tscale: new Vec2(1 / pixelDensity),\n\t\t\t\tshader: gfx.postShader,\n\t\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t\t: gfx.postShaderUniform,\n\t\t\t\tfixed: true,\n\t\t\t})\n\t\t})\n\t\tflush()\n\t\tgfx.lastDrawCalls = gfx.drawCalls\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ?? color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: number,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = text.split(\"\")\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: LoadFontOpt = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: 0,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheCtx\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline * 2\n\t\t\t\t\t\tc2d.strokeStyle = \"#000000\"\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline, atlas.outline)\n\t\t\t\t\t\tw += atlas.outline * 2\n\t\t\t\t\t\th += atlas.outline * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline, atlas.outline)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (app.isFullscreen()) {\n\t\t\t// TODO: doesn't work with letterbox\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst sw = window.innerHeight * rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: wh,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = window.innerWidth / rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\t\twidth: ww,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tif (!gopt.stretch) {\n\t\t\t\t\tgfx.width = ch * rg\n\t\t\t\t\tgfx.height = ch\n\t\t\t\t}\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst sh = ch\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgl.scissor(x * pd, 0, sw * pd, sh * pd)\n\t\t\t\tgl.viewport(x * pd, 0, sw * pd, ch * pd)\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!gopt.stretch) {\n\t\t\t\t\tgfx.width = cw\n\t\t\t\t\tgfx.height = cw / rg\n\t\t\t\t}\n\t\t\t\tconst sw = cw\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgl.scissor(0, y * pd, sw * pd, sh * pd)\n\t\t\t\tgl.viewport(0, y * pd, cw * pd, sh * pd)\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\n\t\t\tgl.viewport(0, 0, cw * pd, ch * pd)\n\n\t\t\tgfx.viewport = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: cw,\n\t\t\t\theight: ch,\n\t\t\t}\n\n\t\t\treturn\n\t\t}\n\n\t\tconst gscale = gopt.scale ?? 1\n\n\t\tgfx.width = cw / gscale\n\t\tgfx.height = ch / gscale\n\t\tgl.viewport(0, 0, cw * pd, ch * pd)\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\twinEvents.error = (e) => {\n\t\tif (e.error) {\n\t\t\thandleErr(e.error)\n\t\t} else {\n\t\t\thandleErr(new Error(e.message))\n\t\t}\n\t}\n\n\twinEvents.unhandledrejection = (e) => handleErr(e.reason)\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.drawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tconst style = msg instanceof Error ? \"error\" : \"info\"\n\t\t\tgame.logs.unshift(`${`[time]${app.time().toFixed(2)}[/time] `}[${style}]${msg?.toString ? msg.toString() : msg}[/${style}]`)\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tget paused() {\n\t\t\treturn app.paused\n\t\t},\n\t\tset paused(v) {\n\t\t\tapp.paused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt()\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake = intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tlet onCurCompCleanup = null\n\n\t\t// TODO: \"this\" should be typed here\n\t\tconst obj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\tpaused: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2>): GameObj<T2> {\n\t\t\t\tconst obj = (() => {\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\treturn make(a)\n\t\t\t\t\t}\n\t\t\t\t\tif (a.parent) {\n\t\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t\t}\n\t\t\t\t\treturn a\n\t\t\t\t})()\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.trigger(\"destroy\")\n\t\t\t\t\tgame.events.trigger(\"destroy\", obj)\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tremoveAll(tag: Tag) {\n\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.draw())\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap((child) => [child, ...child.children])\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: a way to cancel the events?\n\t\t\t\t\tonAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tonDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new IDList()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\t// add update event to a tag or global update\n\tconst onUpdate = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ update: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.paused\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.paused = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"update\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onUpdate\"]\n\n\t// add draw event to a tag or global draw\n\tconst onDraw = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ draw: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.hidden\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.hidden = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"draw\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onDraw\"]\n\n\tfunction onAdd(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"add\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"add\", tag, action)\n\t\t}\n\t}\n\n\tfunction onDestroy(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"destroy\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"destroy\", tag, action)\n\t\t}\n\t}\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\t// add an event that runs when objs with tag t is clicked\n\tfunction onClick(tag: Tag | (() => void), action?: (obj: GameObj) => void): EventController {\n\t\tif (typeof tag === \"function\") {\n\t\t\treturn app.onMousePress(tag)\n\t\t} else {\n\t\t\tconst events = []\n\t\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\t\tif (!obj.area)\n\t\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t\t})\n\t\t\treturn EventController.join(events)\n\t\t}\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// TODO: use PromiseLike?\n\t// TODO: use root game object and timer()?\n\t// add an event that'd be run after t\n\tfunction wait(time: number, action?: () => void): TimerController {\n\t\tlet t = 0\n\t\tconst actions = []\n\t\tif (action) actions.push(action)\n\t\tconst ev = onUpdate(() => {\n\t\t\tt += dt()\n\t\t\tif (t >= time) {\n\t\t\t\tev.cancel()\n\t\t\t\tactions.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tpaused: ev.paused,\n\t\t\tcancel: ev.cancel,\n\t\t\tonEnd(action) {\n\t\t\t\tactions.push(action)\n\t\t\t},\n\t\t\tthen(action) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t}\n\t}\n\n\t// add an event that's run every t seconds\n\tfunction loop(t: number, action: () => void): EventController {\n\n\t\tlet curTimer: null | TimerController = null\n\n\t\tconst newAction = () => {\n\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\tcurTimer = wait(t, newAction)\n\t\t\taction()\n\t\t}\n\n\t\tcurTimer = wait(0, newAction)\n\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn curTimer.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tcurTimer.paused = p\n\t\t\t},\n\t\t\tcancel: () => curTimer.cancel(),\n\t\t}\n\n\t}\n\n\tfunction enterDebugMode() {\n\n\t\tapp.onKeyPress(\"f1\", () => {\n\t\t\tdebug.inspect = !debug.inspect\n\t\t})\n\n\t\tapp.onKeyPress(\"f2\", () => {\n\t\t\tdebug.clearLog()\n\t\t})\n\n\t\tapp.onKeyPress(\"f8\", () => {\n\t\t\tdebug.paused = !debug.paused\n\t\t})\n\n\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f10\", () => {\n\t\t\tdebug.stepFrame()\n\t\t})\n\n\t}\n\n\tfunction enterBurpMode() {\n\t\tapp.onKeyPress(\"b\", () => burp())\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\treturn this.fixed\n\t\t\t\t\t? this.pos\n\t\t\t\t\t: toScreen(this.pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): MoveComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = toScreen(this.pos)\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: this.fixed,\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\treturn app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (this.fixed) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tfixed: obj.fixed,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\t// TODO: clean up\n\t\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"text\",\n\t\t\ttext: t,\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action: () => void): TimerController {\n\t\t\t\tconst actions = [ action ]\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// TODO\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isOverlapping(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\t// TODO: all children should be fixed\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", n)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t\tif (gopt.debug !== false) {\n\t\t\t\tenterDebugMode()\n\t\t\t}\n\n\t\t\tif (gopt.burp) {\n\t\t\t\tenterBurpMode()\n\t\t\t}\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\t\tconst funcs = plugin(ctx)\n\t\tfor (const k in funcs) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcs[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcs[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as unknown as MergeObj<T> & KaboomCtx\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add: KaboomCtx[\"add\"] = game.root.add.bind(game.root)\n\tconst readd: KaboomCtx[\"readd\"] = game.root.readd.bind(game.root)\n\tconst destroyAll: KaboomCtx[\"destroyAll\"] = game.root.removeAll.bind(game.root)\n\tconst get: KaboomCtx[\"get\"] = game.root.get.bind(game.root)\n\n\t// TODO: expose this\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\tid: \"boom\",\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (!other.exists()) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tif (gopt.debug !== false) {\n\t\tenterDebugMode()\n\t}\n\n\tif (gopt.burp) {\n\t\tenterBurpMode()\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tgame.events.on(\"resize\", action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.name,\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\tfor (const name in winEvents) {\n\t\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t\t}\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tgc.forEach((f) => f())\n\n\t\t\t// delete webgl buffers\n\t\t\tgl.deleteBuffer(gfx.vbuf)\n\t\t\tgl.deleteBuffer(gfx.ibuf)\n\n\t\t})\n\n\t}\n\n\tfunction tween<V extends LerpValue>(\n\t\tfrom: V,\n\t\tto: V,\n\t\tduration: number,\n\t\tsetValue: (value: V) => void,\n\t\teaseFunc = easings.linear,\n\t): TweenController {\n\t\tlet curTime = 0\n\t\tconst onEndEvents: Array<() => void> = []\n\t\tconst ev = onUpdate(() => {\n\t\t\tcurTime += dt()\n\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\tif (t === 1) {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn ev.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tev.paused = p\n\t\t\t},\n\t\t\tonEnd(action: () => void) {\n\t\t\t\tonEndEvents.push(action)\n\t\t\t},\n\t\t\tthen(action: () => void) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tev.cancel()\n\t\t\t},\n\t\t\tfinish() {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t},\n\t\t}\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\tframeStart()\n\n\t\tif (!assets.loaded) {\n\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\tassets.loaded = true\n\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t}\n\t\t}\n\n\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\n\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\tdrawLoadScreen()\n\n\t\t} else {\n\n\t\t\tif (!debug.paused) updateFrame()\n\t\t\tcheckFrame()\n\t\t\tdrawFrame()\n\n\t\t\tif (gopt.debug !== false) {\n\t\t\t\tdrawDebug()\n\t\t\t}\n\n\t\t}\n\n\t\tif (isFirstFrame) {\n\t\t\tisFirstFrame = false\n\t\t}\n\n\t\tframeEnd()\n\t\tgame.events.trigger(\"frameEnd\")\n\n\t})\n\n\tupdateViewport()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchScreen: app.isTouchScreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\t// getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tTimer,\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tapp.canvas().focus()\n\n\treturn ctx\n\n}\n", "\nconst assetLoader = {\n\n  loadSprites: function() {\n    loadSprite(\"space intro\", \"sprites/Background_space.png\");\n    loadSprite(\"glitch\", \"sprites/glitch.jpg\");\n    loadSprite(\"chineseflag\", \"sprites/chineseflag.png\");\n    loadSprite(\"heart\", \"https://cdn.pixabay.com/photo/2017/09/23/16/33/pixel-heart-2779422_1280.png\");\n    loadSprite(\"heartCounter\", \"https://cdn.pixabay.com/photo/2017/09/23/16/33/pixel-heart-2779422_1280.png\");\n    loadSprite(\"englishflag\", \"sprites/englishflag.png\");\n    loadSprite(\"ufo no\", \"sprites/ufo no.png\");\n    loadSprite(\"gameover\", \"sprites/gameover.png\");\n    loadSprite(\"englishhome\", \"sprites/englishhome.png\");\n    loadSprite(\"englishHomeMobile\", \"sprites/englishHomeMobile.png\");\n    loadSprite(\"chinesehome\", \"sprites/chinesehome.png\");\n    loadSprite(\"chineseHomeMobile\", \"sprites/chineseHomeMobile.png\");\n    loadSprite(\"space\", \"sprites/Background_space.png\");\n    loadSprite(\"pipe\", \"sprites/pipe3.png\");\n    loadSprite(\"explode\", \"sprites/shipcorrect.png\");\n    loadSprite(\"RETRY\", \"sprites/RETRY.png\");\n    loadSprite(\"PLAY\", \"sprites/PLAY.png\");\n    loadSprite(\"chinesePLAY\", \"sprites/Vector.png\");\n    loadSprite(\"home icon\", \"sprites/home icon.png\");\n    loadSprite(\"Group 17\", \"sprites/Group 17.png\");\n  },\n\n  loadAseprites: function() {\n    // Load all asperites\n    //loadAseprite(\"spaceBackground\", \"sprites/background.png\", \"sprites/background.json\");\n    loadAseprite(\"kirby\", \"sprites/kirby ufo cut out.png\", \"sprites/kirby ufo cut out.json\");\n  },\n\n  loadSounds: function() {\n    // Load all sounds\n    loadSound(\"laser\", \"sounds/blaster-2-81267-[AudioTrimmer.com].mp3\");\n    loadSound(\"wooosh\", \"sounds/space.mp3\");\n    loadSound(\"punch\", \"sounds/punch.mp3\");\n    loadSound(\"die sound\", \"sounds/die sound.mp3\");\n    loadSound(\"crash\", \"sounds/blaster-2-81267-[AudioTrimmer.com].mp3\");\n    loadSound(\"hurt\", \"sounds/Minecraft Damage Oof Sound Effect (mp3cut.net).mp3\");\n    loadSound(\"rocket noise\", \"sounds/rocket noise.wav\");\n    loadSound(\"background song 2\", \"sounds/background song 2.wav\");\n    loadSound(\"end music\", \"sounds/end music.wav\");\n  },\n\n  loadPedits: function() {\n    // Load all pedits\n    loadPedit(\"heart alien\", \"sprites/spritesheet ufo life.pedit\");\n    loadPedit(\"shipcorrect\", \"sprites/spritesheet ufo.pedit\");\n    loadPedit(\"fire\", \"sprites/Explosion.pedit\");\n    loadPedit(\"boss pedit\", \"sprites/boss pedit.pedit\");\n    loadPedit(\"astroid bad\", \"sprites/astroid bad.pedit.pedit\");\n    loadPedit(\"alien\", \"sprites/spritesheet ufo.pedit\");\n    loadPedit(\"alienhurt\", \"sprites/spritesheet ufo copy.pedit\");\n  },\n};\n\nexport { assetLoader };\n", "export function englishMenuScene(gameData) {\n\n  // HINT!! Uh oh! This englishIntro is a string constant! How should we change it?\n  scene(\"englishIntro\", (gameData) => {\n\n    if (width() < 600) {\n      home = add([\n        sprite(\"englishHomeMobile\", { height: height(), width: width(), }),\n        area()\n      ])\n    } else {\n      home = add([\n        sprite(\"englishhome\", { height: height(), width: width(), }),\n        area()\n      ])\n    }\n    const playButton = add([\n      sprite(\"PLAY\"),\n      area(),\n      anchor(\"center\"),\n      scale(0.2),\n      pos(width() / 2, height() / 2)\n    ])\n\n    playButton.onClick(() => {\n      // HINT!! Uh oh! This mainGameScene is a string constant! How should we change it?\n      go(\"mainGameScene\", gameData)\n    })\n\n\n    const flag = add([\n      sprite(\"chineseflag\"),\n      area(),\n      pos(width() * 0.5, height() - 150),\n      scale(0.5),\n      anchor(\"top\")\n    ])\n    flag.onHover(() => {\n      flag.opacity = 0.3\n    })\n    flag.onHoverEnd(() => {\n      flag.opacity = 1\n    })\n\n\n    flag.onClick(() => {\n      // HINT!! Uh oh! This chineseIntro is a string constant! How should we change it?\n      go(\"chineseIntro\")\n    })\n\n    onKeyPress(\"space\", () => {\n      // HINT!! Uh oh! This mainGameScene is a string constant! How should we change it?\n      go(\"mainGameScene\", gameData);\n    });\n  });\n\n}", "export function chineseMenuScene() {\n\n  scene(\"chineseIntro\", () => {\n\n    if (width() < 600) {\n      add([\n        sprite(\"chineseHomeMobile\", { height: height(), width: width(), })\n      ])\n    } else {\n      add([\n        sprite(\"chinesehome\", { height: height(), width: width(), })\n      ])\n    }\n\n    const playButton = add([\n      sprite(\"chinesePLAY\"),\n      area(),\n      anchor(\"center\"),\n      scale(0.5),\n      pos(width() / 2, height() / 2)\n    ])\n\n    playButton.onClick(() => {\n      go(\"game\")\n    })\n\n    const Englishflag = add([\n      sprite(\"englishflag\"),\n      area(),\n      pos(width() * 0.5, height() - 150),\n      scale(0.5),\n      anchor(\"top\")\n    ])\n    Englishflag.onHover(() => {\n      Englishflag.opacity = 0.3\n    })\n    Englishflag.onHoverEnd(() => {\n      Englishflag.opacity = 1\n    })\n    Englishflag.onClick(() => {\n      Englishflag.opacity = 1\n    })\n\n    Englishflag.onClick(() => {\n      go(\"englishIntro\")\n    })\n\n    onKeyPress(\"space\", () => {\n      go(\"game\");\n    });\n\n  });\n\n}", "import { englishMenuScene } from \"../../scenes/englishMenuScene.js\";\nimport { chineseMenuScene } from \"../../scenes/chineseMenuScene.js\";\n\nconst menuSceneLoader = {\n  loadEnglishScene: function(gameData) {\n    englishMenuScene(gameData);\n  },\n  loadChineseScene: function(gameData) {\n    chineseMenuScene(gameData);\n  },\n  displayEnglishScene: function(gameData) {\n    go(gameData.sceneNames.englishIntro, gameData);\n  },\n  displayChineeseScene: function(gameData) {\n    go(gameData.sceneNames.chineseIntro, gameData);\n  }\n}\n\nexport {menuSceneLoader};", "export function mainGameScene(gameData) {\n  \n  // HINT!! Uh oh! This mainGameScene is a string constant! How should we change it?\n  scene(\"mainGameScene\", (gameData) => {\n\n    //console.log(JSON.stringify(gameData, null, 2));\n\n    \n    const player = add([\n      sprite(\"shipcorrect\"),\n      scale(1.5),\n      pos(80, height() * 0.75),\n      area(),\n      body(),\n      health(3),\n    ]);\n    \n    const endMusic = play(\"end music\")\n    endMusic.paused = true;\n\n    const music = play(\"background song 2\", {\n      loop: true\n    })\n\n    player.on('death', () => { play(\"end music\") })\n    volume: 1.5\n\n    player.on('death', () => { music.paused = true })\n\n    const game = add([\n      timer(),\n    ])\n\n    // const background = add([\n    //   sprite('spaceBackground', {width: width(), height: height()}),\n    // ])\n\n    const rocketNoise = play(\"rocket noise\", {\n      volume: 0.01,\n      loop: true\n    })\n    rocketNoise.paused = true\n    rocketNoise.speed = 1.2\n\n    const heartCounter = [] //store the hearts so we can delete all of them each time\n\n    function drawLives(lives) {\n      //delete all hearts and redraw them\n      for (let i = 0; i < heartCounter.length; i++) {\n        destroy(heartCounter[i])\n      }\n      for (let life = 1; life < lives + 1; life++) {\n        const heartCount = add([\n          sprite(\"heartCounter\"),\n          pos(life * 64, 0),\n          scale(0.05),\n        ])\n        heartCounter.push(heartCount) //adds the heart to the list\n      }\n    }\n    drawLives(3)\n\n    player.on(\"hurt\", () => {\n      drawLives(player.hp())\n    })\n    player.on(\"heal\", () => {\n      drawLives(player.hp())\n    })\n\n    player.onCollide(\"pipe\", (pipe) => {\n      player.hurt(1)\n      destroy(pipe)\n      play(\"hurt\")\n    })\n\n    player.onCollide(\"heart\", (heart) => {\n      debug.log(\"HEAL\")\n      player.heal(1)\n      destroy(heart)\n    })\n\n    // triggers when hp reaches 0\n    player.on(\"death\", () => {\n      rocketNoise.paused = true\n      destroy(player)\n      play(\"die sound\")\n      wait(3, go(\"gameover\", gameData))\n      go(\"gameover\", gameData);\n    })\n\n    let radius = 50\n    const shootButton = add([\n      pos(width() - radius * 2, height() - radius * 2),\n      circle(radius),\n      color(255, 0, 0),\n      area()\n    ])\n\n\n    shootButton.onClick((event) => {\n      spawnBullet(player.pos)\n    })\n\n    let curTween = null\n    onKeyPress(\"p\", () => {\n      game.paused = !game.paused\n      if (curTween) curTween.cancel()\n      curTween = tween(\n        pauseMenu.pos,\n        game.paused ? center() : center().add(0, 700),\n        1,\n        (p) => pauseMenu.pos = p,\n        easings.easeOutElastic,\n      )\n      if (game.paused) {\n        pauseMenu.hidden = false\n        pauseMenu.paused = false\n      } else {\n        curTween.onEnd(() => {\n          pauseMenu.hidden = true\n          pauseMenu.paused = true\n        })\n      }\n    })\n\n    const pauseMenu = add([\n      rect(300, 400),\n      color(255, 255, 255),\n      outline(4),\n      anchor(\"center\"),\n      pos(center().add(0, 700)),\n    ])\n    pauseMenu.hidden = true\n    pauseMenu.paused = true\n\n    onKeyRelease(\"space\", () => {\n      rocketNoise.paused = true\n    })\n    onKeyDown(\"space\", () => {\n      player.jump(400);\n    });\n    onKeyPress(\"space\", () => {\n      rocketNoise.paused = false\n    })\n    onMousePress(() => {\n      rocketNoise.paused = false;\n    });\n    onMouseRelease(() => {\n      rocketNoise.paused = true;\n    })\n    onMouseDown((event) => {\n      console.log(event)\n      player.jump(500);\n    })\n\n    const BULLET_SPEED = 1500;\n\n    onKeyPress(\"s\", () => {\n      spawnBullet(player.pos);\n    });\n\n    function spawnBullet(bulletpos) {\n\n      bulletpos = bulletpos.add(10, 10);\n\n      const bullet = add([\n        rect(6, 2),\n        pos(bulletpos),\n        color(255, 255, 255),\n        area(),\n        \"bullet\",\n        {\n          bulletSpeed: BULLET_SPEED\n        }\n      ]);\n\n      //added this so that the collideEnd is attached to the specific bullet const\n      bullet.onCollideEnd(\"pipe\", (pipe) => {\n        console.log(\"collide\")\n        destroy(bullet);\n        destroy(pipe);\n        gameData.data.score += 1\n        scoreText.text = gameData.data.score\n        play(\"crash\")\n        const explosion = add([\n          sprite(\"fire\", { anim: \"fire\" }),\n          scale(1.5),\n          pos(pipe.pos),\n          'explosion'\n\n        ]);\n        explosion.animSpeed = 5\n        onUpdate('explosion', () => { explosion.move(-500, 0) })\n      });\n\n      play(\"laser\", {\n        volume: 0.3,\n        detune: rand(-1200, 1200),\n\n      });\n    };\n\n    onUpdate(\"bullet\", (b) => {\n      b.move(b.bulletSpeed, 0);\n      if ((b.pos.x < 0) || (b.pos.x > width())) {\n        destroy(b);\n      }\n    });\n\n    onUpdate(\"pipe\", (pipe) => {\n      // spaceBackground.animSpeed = gameData.data.score * 0.5\n      var stuff = -650 - gameData.data.score * 150\n      pipe.move(stuff, 100);\n\n      var currentAngle = pipe.angle\n      pipe.angle = currentAngle + -5\n\n      if (pipe.passed === false && pipe.pos.x < player.pos.x) {\n        pipe.passed = true;\n          gameData.data.score += 1;\n        scoreText.text = gameData.data.score;\n        if (gameData.data.score == 100) {\n          spawnBossPedit()\n        } else if (gameData.data.score == 1000) {\n          spawnAstroidBad()\n        }\n      }\n    });\n\n    onUpdate(\"heart\", (heart) => {\n      heart.move(-650, 50);\n      var currentAngle = heart.angle\n      heart.angle = currentAngle + -5\n    });\n\n    speed = 2\n\n    loop(1, () => {\n      producePipes();\n    })\n\n    function producePipes() {\n      add([\n        sprite(\"pipe\"),\n        pos(width(), rand(height() * 0.6)),\n        rotate(rand(360)),\n        \"pipe\",\n        area(scale, 0, 3),\n        { passed: false },\n        anchor('center')\n      ]);\n    }\n\n    loop(20.6, () => {\n      produceHearts();\n    })\n\n    function produceHearts() {\n      add([\n        sprite(\"heart\"),\n        pos(width(), rand(height())),\n        rotate(rand(360)),\n        \"heart\",\n        scale(0.05),\n        area()\n      ]);\n    }\n\n    // todo.. add scene code here\n    player.onUpdate(() => {\n      if (player.pos.y > height() + 30 || player.pos.y < -30) {\n        rocketNoise.paused = true\n        music.paused = true\n        play(\"end music\")\n        go(\"gameover\", gameData);\n\n      }\n    });\n    speed = 1.5\n    let score = 0\n    const scoreText = add([\n      text(score, { size: 50 })\n\n    ]);\n  });\n\n}", "export function gameOverScene(gameData) {\n  scene(\"gameover\", (gameData) => {\n\n    if (gameData.data.score > gameData.data.highScore) {\n      gameData.data.highScore = gameData.data.score;\n      replit.setData(\"highscore\", gameData.data.score)\n    }\n    onKeyPress(\"e\", () => go(\"englishIntro\"))\n\n    add([\n      sprite(\"gameover\", { height: height(), width: width() })\n    ])\n\n    add([\n      text(\n        \"score: \" + gameData.data.score\n        + \"\\nglobal high score: \" + gameData.data.highScore,\n        { size: 50, font: \"sans-serif\" }),\n      color(15, 215, 238),\n      width(width()),\n      pos(10, 10)\n    ]);\n\n    const retryButton = add([\n      sprite(\"RETRY\"),\n      area(),\n      anchor(\"center\"),\n      scale(0.5),\n      pos(width() / 2, height() / 2)\n    ])\n\n    retryButton.onClick(() => {\n      gameData.data.score = 0;\n      go(\"mainGameScene\", gameData);\n    });\n\n    const homeIcon = add([\n      sprite(\"home icon\"),\n      area(),\n      anchor(\"botleft\"),\n      scale(0.15),\n      pos(0, height())\n    ])\n\n    onKeyPress('space', () =>\n      go(\"mainGameScene\", gameData),\n    );\n\n    homeIcon.onClick(() => {\n      go(\"englishIntro\", gameData);\n    });\n    homeIcon.onHover(() => {\n      homeIcon.opacity = 0.3\n      // debug.log('hover on')\n    })\n    homeIcon.onHoverEnd(() => {\n      homeIcon.opacity = 1\n      //debug.log('hover off')\n    })\n  });\n\n}", "import { mainGameScene } from \"../../scenes/mainGameScene.js\";\nimport { gameOverScene} from \"../../scenes/gameOverScene.js\";\nconst gameSceneLoader = {\n  loadMainGameScene: function(gameData) {\n    mainGameScene(gameData);\n  },\n  displayGameScene: function(gameData) {\n    go(gameData.sceneNames.gameScene, gameData);\n  },\n  loadGameOverScene: function(gameData) {\n    gameOverScene(gameData);\n  },\n  displayGameOverScene: function(gameData) {\n    go(gameData.sceneNames.gameOverScene, gameData);\n  }\n}\n\nexport {gameSceneLoader};", "import kaboom from \"kaboom\";\nimport \"kaboom/global\";\n\nconst gameInitializer = {\n  initializeKaboom: function() {\n    kaboom({ background: [0, 0, 0]});\n  },\n  initializeGravity: function(gravity) {\n    setGravity(gravity);\n  },\n  initializeMusic: function(music) {\n    // initialize all music here\n  },\n  initializeSounds: function(sounds) {\n    // initialize all sounds here\n  },\n  initializeScore: function(score) {\n    \n  },\n  initializeHealth: function(healthPoints) {\n    \n  },\n};\n\nexport {gameInitializer};\n\n", "let gameData = \n{\n  music: \n  {\n  },\n  \n  sounds: \n  {\n  },\n\n  data: \n  {\n    score: 0,\n    highScore: 0,\n    gravity: 2200, //3200\n  },\n\n  sceneNames:\n  {\n    englishIntro: \"englishIntro\",\n    chineseIntro: \"chineseIntro\",\n    gameOverScene: \"gameover\",\n    gameScene: \"mainGameScene\",\n  }\n\n};\n\nlet gameFunctions = {\n  \n};\n\nexport { gameData, gameFunctions };", "import kaboom from 'kaboom';\nimport \"kaboom/global\";\n\nimport { spawnBossPedit, spawnAstroidBad } from \"./boss\";\n\n// LOADERS\nimport { assetLoader } from \"./loaders/assetLoaders/assetLoader\";\nimport { menuSceneLoader } from \"./loaders/sceneLoaders/menuSceneLoader\";\nimport { gameSceneLoader } from \"./loaders/sceneLoaders/gameSceneLoader\";\n\n// INITIALIZERS\nimport { gameInitializer } from \"./initializers/gameInitializer\";\n\n// DATA\nimport {gameData, gameFunctions} from \"./gameData\";\n\n// Load all game assets\nconsole.log(\"Initiali\")\ngameInitializer.initializeKaboom();\nassetLoader.loadSprites();\nassetLoader.loadAseprites();\nassetLoader.loadSounds();\nassetLoader.loadPedits();\n\n// Load all scenes\n// Dependency injection: We make sure that all the functions that need the game data are given game data\n// This means that they don't have to worry about game data, they can focus on their own responsibilities\n// For example, \"loadMainGameScene\" should only have to worry about loading the game. Anything that it needs\n// to do so, we should give to it!\nmenuSceneLoader.loadEnglishScene(gameData);\nmenuSceneLoader.loadChineseScene(gameData);\ngameSceneLoader.loadMainGameScene(gameData);\ngameSceneLoader.loadGameOverScene(gameData);\nmenuSceneLoader.displayEnglishScene(gameData);\n\n// Initialize the game parameters\n// Parameterization: Making sure that all the data in our game is in the form of a variable instead of a fixed value, so that if we ever\n// want to change this value, we don't have to go to ALL the functions and places that need it, we can simply just change\n// the variable where it was first made\ngameInitializer.initializeGravity(gameData.data.gravity);\n\nreplit.getData(\"highscore\").then((highscore) => { highscore = gameData.data.highScore; })"],
  "mappings": "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",
  "names": ["deg2rad", "deg", "__name", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "_Vec2", "x", "y", "angle", "args", "p2", "vec2", "s", "len", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "Rect", "__publicField", "_Color", "r", "g", "arr", "hex", "result", "h", "l", "hue2rgb", "p", "q", "rgb", "hsl2rgb", "Quad", "w", "quad", "Mat4", "m0", "m1", "m4", "m5", "out", "i", "j", "det", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "wave", "lo", "hi", "f", "A", "C", "M", "RNG", "seed", "defRNG", "randSeed", "rand", "randi", "chance", "choose", "list", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "testRectPoint", "pts", "Line", "pt", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "c", "dis", "t1", "t2", "testCirclePoint", "testCirclePolygon", "prev", "cur", "testPolygonPoint", "poly", "p1", "pos", "width", "height", "Polygon", "dx", "dy", "Circle", "center", "radius", "tr", "Ellipse", "rx", "ry", "total", "sat", "overlap", "displacement", "axisProj", "min1", "max1", "min2", "max2", "o", "o1", "o2", "IDList", "id", "EventController", "cancel", "events", "ev", "e", "Event", "action", "res", "EventHandler", "name", "deepEq", "k1", "k2", "k", "base64ToArrayBuffer", "base64", "binstr", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "isDataURL", "str", "getExt", "uid", "BinaryHeap", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "gamepad_default", "ButtonState", "btn", "GamepadState", "FPSCounter", "dt", "app_default", "opt", "state", "canvas", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "el", "exitFullscreen", "getFullscreenElement", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchScreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "onKeyDown", "key", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onGamepadButtonDown", "onGamepadButtonPress", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "stickName", "value", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "kbGamepad", "entries", "entry", "c2", "c3", "c4", "c5", "easings", "easings_default", "Timer", "VERSION", "ASCII_CHARS", "DEF_ANCHOR", "BG_GRID_SIZE", "DEF_FONT", "DBG_FONT", "DEF_TEXT_SIZE", "DEF_TEXT_CACHE_SIZE", "MAX_TEXT_CACHE_SIZE", "FONT_ATLAS_WIDTH", "FONT_ATLAS_HEIGHT", "SPRITE_ATLAS_WIDTH", "SPRITE_ATLAS_HEIGHT", "UV_PAD", "DEF_HASH_GRID_SIZE", "DEF_FONT_FILTER", "LOG_MAX", "VERTEX_FORMAT", "STRIDE", "sum", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "ctx", "kaboom_default", "gopt", "root", "gscale", "fixedSize", "cw", "ch", "pixelDensity", "styles", "fontCacheCanvas", "fontCacheCtx", "app", "gc", "gl", "Texture", "filter", "wrap", "img", "tex", "TexPacker", "FrameBuffer", "gfx", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "vbuf", "offset", "ibuf", "bgTex", "SpriteData", "frames", "anims", "slice9", "src", "assets", "slice", "loadImg", "SoundData", "buf", "resolve", "reject", "audio", "fetchArrayBuffer", "masterNode", "burpSnd", "burp_default", "err", "Asset", "loader", "asset", "AssetBucket", "handle", "loaded", "game", "make", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "path", "fetchURL", "fetchJSON", "fetchText", "loadJSON", "FontData", "face", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "spr", "createSpriteSheet", "images", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "size", "anim", "loadShader", "vert", "frag", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "opts", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSprite", "resolveSound", "snd", "resolveShader", "shader", "resolveFont", "bfont", "volume", "play", "paused", "srcNode", "onEndEvents", "gainNode", "startTime", "stopTime", "started", "getTime", "start", "d", "cloneNode", "oldNode", "newNode", "burp", "vertSrc", "fragSrc", "vertShader", "fragShader", "prog", "formatShaderError", "msg", "FMT", "match", "vertError", "fragError", "uniform", "loc", "chars", "cols", "charMap", "drawRaw", "verts", "indices", "fixed", "shaderSrc", "flush", "transform", "screen2ndc", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "drawTexture", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "color", "opacity", "uvPadX", "uvPadY", "qx", "qy", "scale", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "step", "drawRect", "drawPolygon", "drawLine", "drawLines", "minSLen", "drawCircle", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "mask", "test", "drawMasked", "drawSubtracted", "getViewportScale", "ow", "oh", "applyCharTransform", "fchar", "TEXT_STYLE_RE", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "c2d", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "line", "ox", "idx", "style", "drawText", "drawFormattedText", "ftext", "updateViewport", "pd", "ww", "wh", "rw", "rc", "sw", "sh", "rg", "windowToContent", "contentToView", "handleErr", "debug", "updateFrame", "camPos", "camScale", "camRot", "shake", "intensity", "toScreen", "toWorld", "calcTransform", "obj", "comps", "compStates", "cleanups", "onCurCompCleanup", "tag", "comp", "prop", "func", "checkDeps", "dep", "isChild", "onAdd", "onDestroy", "ctrl", "cb", "event", "onUpdate", "add", "onDraw", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "get", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "wait", "actions", "loop", "curTimer", "newAction", "enterDebugMode", "toFixed", "enterBurpMode", "setGravity", "getGravity", "setBackground", "getBackground", "speed", "diff", "rotate", "easeFunc", "tween", "anchor", "z", "follow", "move", "dir", "DEF_OFFSCREEN_DIS", "offscreen", "distance", "isOut", "screenRect", "area", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "_a", "getRenderProps", "sprite", "spriteData", "curAnim", "spriteLoadedEvent", "calcTexScale", "_b", "left", "right", "top", "bottom", "iw", "ih", "w1", "w3", "w2", "h3", "quads", "uv", "setSpriteData", "onLoad", "prevAnim", "update", "rect", "uvquad", "outline", "timer", "from", "to", "duration", "setValue", "curTime", "DEF_JUMP_FORCE", "MAX_VEL", "body", "vel", "curPlatform", "lastPlatformPos", "wantFall", "tmass", "col2", "prevVelY", "force", "doubleJump", "numJumps", "jumpsLeft", "stay", "scenesToStay", "health", "hp", "lifespan", "fade", "initState", "stateList", "transitions", "initStateEvents", "trigger", "didFirstEnter", "oldState", "available", "fadeIn", "done", "scene", "def", "go", "onSceneLeave", "getData", "setData", "plug", "plugin", "funcs", "EdgeMask", "tile", "tilePos", "isObstacle", "cost", "edges", "getEdgeMask", "loopup", "edgeMask", "level", "is", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "index", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "createEdgeMap", "createConnectivityMap", "traverse", "frontier", "getNeighbours", "getCost", "node", "neighbour", "getHeuristic", "goal", "diagonals", "levelComp", "hasPos", "hasTile", "cameFrom", "costSoFar", "current", "neighbours", "next", "newCost", "row", "keys", "agent", "target", "navMapChangedEvent", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "destroy", "readd", "destroyAll", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "stack", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "progress", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "onLoading", "onResize", "onError", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "gameData", "gameData", "gameData", "b", "gameData", "gameData"]
}
